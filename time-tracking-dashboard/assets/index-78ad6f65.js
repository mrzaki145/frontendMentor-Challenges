(function(){const i=document.createElement("link").relList;if(i&&i.supports&&i.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))r(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const c of t.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&r(c)}).observe(document,{childList:!0,subtree:!0});function s(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function r(e){if(e.ep)return;e.ep=!0;const t=s(e);fetch(e.href,t)}})();const a=[{title:"Work",timeframes:{daily:{current:5,previous:7},weekly:{current:32,previous:36},monthly:{current:103,previous:128}}},{title:"Play",timeframes:{daily:{current:1,previous:2},weekly:{current:10,previous:8},monthly:{current:23,previous:29}}},{title:"Study",timeframes:{daily:{current:0,previous:1},weekly:{current:4,previous:7},monthly:{current:13,previous:19}}},{title:"Exercise",timeframes:{daily:{current:1,previous:1},weekly:{current:4,previous:5},monthly:{current:11,previous:18}}},{title:"Social",timeframes:{daily:{current:1,previous:3},weekly:{current:5,previous:10},monthly:{current:21,previous:23}}},{title:"Self-Care",timeframes:{daily:{current:0,previous:1},weekly:{current:2,previous:2},monthly:{current:7,previous:11}}}],u={timeFramesList:document.querySelector("#time-frames-list"),reportsEL:document.querySelector("#reports"),reportTemplate:document.querySelector("#reportTemplate")};let n;document.addEventListener("DOMContentLoaded",m);u.timeFramesList.addEventListener("click",d);function m(){n=document.querySelector('.filter-list__btn[aria-pressed="true"]'),l()}function d({target:o}){!o.matches("button")||o.matches('button[aria-pressed="true"]')||(n.removeAttribute("aria-pressed"),n=o,n.setAttribute("aria-pressed","true"),l())}function l(){const o=document.createDocumentFragment(),{timeFrame:i}=n.dataset;a.forEach(s=>{const r=document.importNode(u.reportTemplate.content,!0);r.querySelector(".card").classList.add(s.title.toLowerCase()),r.querySelector(".card__title").textContent=s.title,r.querySelector(".card__current-time").textContent=`${s.timeframes[i].current}hrs`,r.querySelector(".card__previous-time").textContent=`Last week - ${s.timeframes[i].previous}hrs`,o.append(r)}),u.reportsEL.innerHTML="",u.reportsEL.append(o)}
